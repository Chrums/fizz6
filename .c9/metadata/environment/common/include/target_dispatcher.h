{"filter":false,"title":"target_dispatcher.h","tooltip":"/common/include/target_dispatcher.h","undoManager":{"mark":40,"position":40,"stack":[[{"start":{"row":0,"column":0},"end":{"row":101,"column":6},"action":"insert","lines":["#ifndef DISPATCHER_H","#define DISPATCHER_H","","#include <functional>","#include <map>","#include <typeindex>","#include <vector>","#include \"event.h\"","","namespace strife {","    namespace common {","        ","        class Dispatcher {","            ","        public:","        ","            template <class E>","            using Callback = std::function<void (const E&)>;","            ","            template <class T, class E>","            using TargetCallback = std::function<void (T* const, const E&)>;","            ","        protected:","            ","            template <class E>","            class Binding {","            ","            public:","            ","                Binding(Callback<E> callback)","                    : callback_(callback) {}","                ~Binding() = default;","                    ","                void operator()(const Event& event) {","                    callback_(static_cast<const E&>(event));","                }","                ","            private:","            ","                Callback<E> callback_;","            ","            };","            ","            template <class T, class E>","            class TargetBinding {","               ","            public:","            ","                TargetBinding(TargetCallback<T, E> callback)","                    : callback_(callback) {}","                ~TargetBinding() = default;","                    ","                void operator()(T* const target, const Event& event) {","                    callback_(static_cast<const E&>(event));","                }","                ","            private:","            ","                TargetCallback<T, E> callback_;","                ","            };","            ","        public:","        ","            Dispatcher() = default;","            ~Dispatcher() = default;","        ","            void emit(const Event& event);","            ","            template <class T>","            void emit(T* const target, const Event& event) {","                const std::type_index type(typeid(event));","                std::vector<Callback<Event>> callbacks = callbacks_[type];","                for (Callback<Event> callback : callbacks) {","                    callback(target, event);","                }","            }","            ","            template <class E>","            void subscribe(Callback<E> callback) {","                const std::type_index type(typeid(E));","                std::vector<Callback<Event>>& callbacks = callbacks_[type];","                Binding<E> binding(callback);","                callbacks.push_back(binding);","            }","            ","            template <class E>","            void unsubscribe(Callback<E> callback) {","                const std::type_index type(typeid(E));","                // TODO: Implement this...","            }","            ","\t\tprivate:","\t\t","\t\t\tstd::map<const std::type_index, std::vector<Callback<Event>>> callbacks_;","            ","        };","        ","    }","}","","#endif"],"id":1}],[{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"insert","lines":["T"],"id":2},{"start":{"row":12,"column":15},"end":{"row":12,"column":16},"action":"insert","lines":["a"]},{"start":{"row":12,"column":16},"end":{"row":12,"column":17},"action":"insert","lines":["r"]},{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"insert","lines":["g"]},{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"insert","lines":["e"]},{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":["t"]}],[{"start":{"row":11,"column":8},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":12,"column":0},"end":{"row":12,"column":8},"action":"insert","lines":["        "]},{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["c"]}],[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"remove","lines":["c"],"id":4}],[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["t"],"id":5},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["e"]},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":["m"]},{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":["p"]},{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":["l"]},{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"insert","lines":["a"]},{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"insert","lines":["t"]},{"start":{"row":12,"column":15},"end":{"row":12,"column":16},"action":"insert","lines":["e"]}],[{"start":{"row":12,"column":16},"end":{"row":12,"column":17},"action":"insert","lines":[" "],"id":6},{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"insert","lines":["<"]},{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"insert","lines":["c"]},{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":["l"]},{"start":{"row":12,"column":20},"end":{"row":12,"column":21},"action":"insert","lines":["a"]},{"start":{"row":12,"column":21},"end":{"row":12,"column":22},"action":"insert","lines":["s"]},{"start":{"row":12,"column":22},"end":{"row":12,"column":23},"action":"insert","lines":["s"]}],[{"start":{"row":12,"column":23},"end":{"row":12,"column":24},"action":"insert","lines":[" "],"id":7},{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"insert","lines":["T"]},{"start":{"row":12,"column":25},"end":{"row":12,"column":26},"action":"insert","lines":[">"]}],[{"start":{"row":16,"column":8},"end":{"row":19,"column":12},"action":"remove","lines":["","            template <class E>","            using Callback = std::function<void (const E&)>;","            "],"id":8}],[{"start":{"row":17,"column":22},"end":{"row":17,"column":29},"action":"remove","lines":["class T"],"id":9},{"start":{"row":17,"column":22},"end":{"row":17,"column":23},"action":"remove","lines":[","]},{"start":{"row":17,"column":22},"end":{"row":17,"column":23},"action":"remove","lines":[" "]}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":24},"action":"remove","lines":["Target"],"id":10}],[{"start":{"row":20,"column":18},"end":{"row":39,"column":14},"action":"remove","lines":["","            ","            template <class E>","            class Binding {","            ","            public:","            ","                Binding(Callback<E> callback)","                    : callback_(callback) {}","                ~Binding() = default;","                    ","                void operator()(const Event& event) {","                    callback_(static_cast<const E&>(event));","                }","                ","            private:","            ","                Callback<E> callback_;","            ","            };"],"id":11}],[{"start":{"row":23,"column":18},"end":{"row":23,"column":24},"action":"remove","lines":["Target"],"id":12}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":29},"action":"remove","lines":["TargetBinding"],"id":13},{"start":{"row":27,"column":16},"end":{"row":27,"column":23},"action":"insert","lines":["Binding"]}],[{"start":{"row":29,"column":17},"end":{"row":29,"column":30},"action":"remove","lines":["TargetBinding"],"id":14},{"start":{"row":29,"column":17},"end":{"row":29,"column":24},"action":"insert","lines":["Binding"]}],[{"start":{"row":22,"column":22},"end":{"row":22,"column":31},"action":"remove","lines":["class T, "],"id":15}],[{"start":{"row":37,"column":16},"end":{"row":37,"column":22},"action":"remove","lines":["Target"],"id":16}],[{"start":{"row":37,"column":25},"end":{"row":37,"column":28},"action":"remove","lines":["T, "],"id":17}],[{"start":{"row":27,"column":24},"end":{"row":27,"column":30},"action":"remove","lines":["Target"],"id":18}],[{"start":{"row":27,"column":34},"end":{"row":27,"column":35},"action":"remove","lines":[","],"id":19},{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"remove","lines":["T"]}],[{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"remove","lines":[" "],"id":20}],[{"start":{"row":46,"column":41},"end":{"row":46,"column":42},"action":"remove","lines":[";"],"id":21}],[{"start":{"row":46,"column":41},"end":{"row":46,"column":42},"action":"insert","lines":[" "],"id":22},{"start":{"row":46,"column":42},"end":{"row":46,"column":43},"action":"insert","lines":["{"]}],[{"start":{"row":46,"column":43},"end":{"row":48,"column":13},"action":"insert","lines":["","                ","            }"],"id":23}],[{"start":{"row":47,"column":16},"end":{"row":51,"column":5},"action":"insert","lines":["const type_index type(typeid(event));","    std::vector<Callback<Event>> callbacks = callbacks_[type];","    for (Callback<Event> callback : callbacks) {","        callback(event);","    }"],"id":24}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "],"id":25},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"insert","lines":["    "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "],"id":26},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"insert","lines":["    "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "],"id":27},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"insert","lines":["    "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":47,"column":22},"end":{"row":47,"column":23},"action":"insert","lines":["s"],"id":28},{"start":{"row":47,"column":23},"end":{"row":47,"column":24},"action":"insert","lines":["t"]},{"start":{"row":47,"column":24},"end":{"row":47,"column":25},"action":"insert","lines":["d"]},{"start":{"row":47,"column":25},"end":{"row":47,"column":26},"action":"insert","lines":[":"]},{"start":{"row":47,"column":26},"end":{"row":47,"column":27},"action":"insert","lines":[":"]}],[{"start":{"row":46,"column":22},"end":{"row":46,"column":23},"action":"insert","lines":["T"],"id":29},{"start":{"row":46,"column":23},"end":{"row":46,"column":24},"action":"insert","lines":["*"]}],[{"start":{"row":46,"column":24},"end":{"row":46,"column":25},"action":"insert","lines":[" "],"id":30},{"start":{"row":46,"column":25},"end":{"row":46,"column":26},"action":"insert","lines":["c"]},{"start":{"row":46,"column":26},"end":{"row":46,"column":27},"action":"insert","lines":["o"]},{"start":{"row":46,"column":27},"end":{"row":46,"column":28},"action":"insert","lines":["n"]},{"start":{"row":46,"column":28},"end":{"row":46,"column":29},"action":"insert","lines":["s"]},{"start":{"row":46,"column":29},"end":{"row":46,"column":30},"action":"insert","lines":["t"]}],[{"start":{"row":46,"column":30},"end":{"row":46,"column":31},"action":"insert","lines":[" "],"id":31},{"start":{"row":46,"column":31},"end":{"row":46,"column":32},"action":"insert","lines":["t"]},{"start":{"row":46,"column":32},"end":{"row":46,"column":33},"action":"insert","lines":["a"]},{"start":{"row":46,"column":33},"end":{"row":46,"column":34},"action":"insert","lines":["r"]},{"start":{"row":46,"column":34},"end":{"row":46,"column":35},"action":"insert","lines":["g"]},{"start":{"row":46,"column":35},"end":{"row":46,"column":36},"action":"insert","lines":["e"]},{"start":{"row":46,"column":36},"end":{"row":46,"column":37},"action":"insert","lines":["t"]},{"start":{"row":46,"column":37},"end":{"row":46,"column":38},"action":"insert","lines":[","]}],[{"start":{"row":46,"column":38},"end":{"row":46,"column":39},"action":"insert","lines":[" "],"id":32}],[{"start":{"row":53,"column":12},"end":{"row":62,"column":12},"action":"remove","lines":["","            template <class T>","            void emit(T* const target, const Event& event) {","                const std::type_index type(typeid(event));","                std::vector<Callback<Event>> callbacks = callbacks_[type];","                for (Callback<Event> callback : callbacks) {","                    callback(target, event);","                }","            }","            "],"id":33}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["T"],"id":34},{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["A"]},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["R"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["G"]},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["E"]},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["T"]},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["_"]}],[{"start":{"row":1,"column":8},"end":{"row":1,"column":9},"action":"insert","lines":["T"],"id":35},{"start":{"row":1,"column":9},"end":{"row":1,"column":10},"action":"insert","lines":["A"]},{"start":{"row":1,"column":10},"end":{"row":1,"column":11},"action":"insert","lines":["R"]},{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"insert","lines":["G"]},{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"insert","lines":["E"]},{"start":{"row":1,"column":13},"end":{"row":1,"column":14},"action":"insert","lines":["T"]},{"start":{"row":1,"column":14},"end":{"row":1,"column":15},"action":"insert","lines":["_"]}],[{"start":{"row":43,"column":12},"end":{"row":43,"column":22},"action":"remove","lines":["Dispatcher"],"id":36},{"start":{"row":43,"column":12},"end":{"row":43,"column":28},"action":"insert","lines":["TargetDispatcher"]}],[{"start":{"row":44,"column":13},"end":{"row":44,"column":23},"action":"remove","lines":["Dispatcher"],"id":37},{"start":{"row":44,"column":13},"end":{"row":44,"column":29},"action":"insert","lines":["TargetDispatcher"]}],[{"start":{"row":32,"column":30},"end":{"row":32,"column":31},"action":"insert","lines":["t"],"id":38},{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"insert","lines":["a"]},{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"insert","lines":["r"]},{"start":{"row":32,"column":33},"end":{"row":32,"column":34},"action":"insert","lines":["g"]},{"start":{"row":32,"column":34},"end":{"row":32,"column":35},"action":"insert","lines":["e"]},{"start":{"row":32,"column":35},"end":{"row":32,"column":36},"action":"insert","lines":["t"]},{"start":{"row":32,"column":36},"end":{"row":32,"column":37},"action":"insert","lines":[","]}],[{"start":{"row":32,"column":37},"end":{"row":32,"column":38},"action":"insert","lines":[" "],"id":39}],[{"start":{"row":50,"column":29},"end":{"row":50,"column":30},"action":"insert","lines":["t"],"id":40},{"start":{"row":50,"column":30},"end":{"row":50,"column":31},"action":"insert","lines":["a"]},{"start":{"row":50,"column":31},"end":{"row":50,"column":32},"action":"insert","lines":["r"]},{"start":{"row":50,"column":32},"end":{"row":50,"column":33},"action":"insert","lines":["g"]},{"start":{"row":50,"column":33},"end":{"row":50,"column":34},"action":"insert","lines":["e"]},{"start":{"row":50,"column":34},"end":{"row":50,"column":35},"action":"insert","lines":["t"]},{"start":{"row":50,"column":35},"end":{"row":50,"column":36},"action":"insert","lines":[","]}],[{"start":{"row":50,"column":36},"end":{"row":50,"column":37},"action":"insert","lines":[" "],"id":41}]]},"ace":{"folds":[],"scrolltop":300,"scrollleft":0,"selection":{"start":{"row":28,"column":32},"end":{"row":28,"column":40},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1572286266538,"hash":"72fd5d14029a19697a4c5af3b12a625b790628fb"}